/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2018 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 */
package ti.mediacontrol;

import android.app.Activity;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.media.session.MediaController;
import android.media.session.MediaSessionManager;
import android.os.Build;
import android.support.v4.media.session.MediaControllerCompat;
import android.support.v4.media.session.MediaSessionCompat;
import android.support.v4.media.session.PlaybackStateCompat;

import androidx.annotation.RequiresApi;
import androidx.core.app.NotificationCompat;
import androidx.media.session.MediaButtonReceiver;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.kroll.common.TiConfig;
import org.appcelerator.titanium.TiApplication;


@Kroll.module(name = "TiMediacontrol", id = "ti.mediacontrol")
public class TiMediacontrolModule extends KrollModule {

    // Standard Debugging variables
    private static final String LCAT = "TiMediacontrolModule";
    private static final boolean DBG = TiConfig.LOGD;
    protected MediaSessionManager mManager;
    protected MediaSessionCompat mSession;
    protected MediaController mController;
    NotificationCompat.Action playPauseAction;
    public TiMediacontrolModule() {
        super();
    }

    @Kroll.onAppCreate
    public static void onAppCreate(TiApplication app) {
    }

    public static void fromReceiver() {
        Log.i("---", "from receiver");
    }

    @RequiresApi(api = Build.VERSION_CODES.O)
    @Kroll.method
    public void showNotification() {
        Context context = TiApplication.getAppRootOrCurrentActivity();
        mSession = new MediaSessionCompat(context, "media");
        PlaybackStateCompat.Builder stateBuilder = new PlaybackStateCompat.Builder().setActions(
                PlaybackStateCompat.ACTION_PLAY | PlaybackStateCompat.ACTION_PAUSE
                        | PlaybackStateCompat.ACTION_PLAY_PAUSE | PlaybackStateCompat.ACTION_SKIP_TO_NEXT
                        | PlaybackStateCompat.ACTION_SKIP_TO_PREVIOUS);

        Intent mediaButtonIntent = new Intent(Intent.ACTION_MEDIA_BUTTON);
        mediaButtonIntent.setClass(context, MediaButtonReceiver.class);
        PendingIntent pendingIntent = PendingIntent.getBroadcast(context, 0, mediaButtonIntent,
                PendingIntent.FLAG_IMMUTABLE | PendingIntent.FLAG_UPDATE_CURRENT);

        mSession.setMediaButtonReceiver(pendingIntent);
        mSession.setPlaybackState(stateBuilder.build());
        mSession.setCallback(new MediaSessionCompat.Callback() {
            @Override
            public void onPlay() {
                super.onPlay();
                Log.i("----", "play");
            }

            @Override
            public void onPause() {
                super.onPause();
                Log.i("----", "pause");
            }

            @Override
            public boolean onMediaButtonEvent(Intent mediaButtonEvent) {
                Log.i("----", "on media button");
                return super.onMediaButtonEvent(mediaButtonEvent);
            }
        });
        mSession.setActive(true);

        NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(context, "media");

        playPauseAction = new NotificationCompat.Action(
                R.drawable.ic_pause, "Pause",
                MediaButtonReceiver.buildMediaButtonPendingIntent(context, PlaybackStateCompat.ACTION_PLAY_PAUSE)
        );

        // PendingIntent contentPendingIntent = PendingIntent.getActivity(context,
        //      0, new Intent(TiApplication.getAppRootOrCurrentActivity().getIntent()),
        //      PendingIntent.FLAG_IMMUTABLE | PendingIntent.FLAG_UPDATE_CURRENT
        // );

        MediaControllerCompat controller = mSession.getController();

        notificationBuilder.setContentTitle("Song Title")
                .setContentText("just some text")
                .setSmallIcon(android.R.drawable.stat_sys_warning)
                .setContentIntent(controller.getSessionActivity())
                .setVisibility(NotificationCompat.VISIBILITY_PUBLIC)
                .addAction(playPauseAction)
                //.setPriority(Notification.PRIORITY_MAX)
                .setStyle(new androidx.media.app.NotificationCompat.MediaStyle()
                        .setMediaSession(mSession.getSessionToken())
                        .setShowActionsInCompactView(0));

        NotificationManager notificationManager =
                (NotificationManager) context.getSystemService(Activity.NOTIFICATION_SERVICE);
        notificationManager.createNotificationChannel(
                new NotificationChannel("media", "miscellaneous", NotificationManager.IMPORTANCE_DEFAULT));
        notificationManager.notify(0, notificationBuilder.build());
    }

}



